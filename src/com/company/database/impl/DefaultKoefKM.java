package com.company.database.impl;

import edu.stanford.smi.protege.code.generator.wrapping.AbstractWrappedInstance;
import edu.stanford.smi.protege.model.*;
import com.company.database.KoefKM;
import com.company.database.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: KoefKM
 *
 * @version generated on Mon Apr 18 14:26:55 MSD 2016
 */
public class DefaultKoefKM extends DefaultKoeefis
         implements KoefKM {

    public DefaultKoefKM(Instance instance) {
        super(instance);
    }


    public DefaultKoefKM() {
    }

    // Slot power

    public int getPower() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getPowerSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getPowerSlot() {
        final String name = "power";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasPower() {
        return hasSlotValues(getPowerSlot());
    }


    public void setPower(int newPower) {
        setSlotValue(getPowerSlot(), new java.lang.Integer(newPower));
    }

    // Slot value

    public float getValue() {
        java.lang.Float value = (java.lang.Float) getWrappedProtegeInstance().getOwnSlotValue(getValueSlot());
        return value == null ? null :
            (java.lang.Float) value.floatValue();
    }


    public Slot getValueSlot() {
        final String name = "value";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasValue() {
        return hasSlotValues(getValueSlot());
    }


    public void setValue(float newValue) {
        setSlotValue(getValueSlot(), new java.lang.Float(newValue));
    }
}
