package com.company.database.impl;

import edu.stanford.smi.protege.code.generator.wrapping.AbstractWrappedInstance;
import edu.stanford.smi.protege.model.*;
import com.company.database.StrahCompany;
import com.company.database.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: StrahCompany
 *
 * @version generated on Mon Apr 18 14:26:55 MSD 2016
 */
public class DefaultStrahCompany extends AbstractWrappedInstance
         implements StrahCompany {

    public DefaultStrahCompany(Instance instance) {
        super(instance);
    }


    public DefaultStrahCompany() {
    }

    // Slot basisStavka

    public int getBasisStavka() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getBasisStavkaSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getBasisStavkaSlot() {
        final String name = "basisStavka";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasBasisStavka() {
        return hasSlotValues(getBasisStavkaSlot());
    }


    public void setBasisStavka(int newBasisStavka) {
        setSlotValue(getBasisStavkaSlot(), new java.lang.Integer(newBasisStavka));
    }

    // Slot companyName

    public String getCompanyName() {
        return (String) getWrappedProtegeInstance().getOwnSlotValue(getCompanyNameSlot());
    }


    public Slot getCompanyNameSlot() {
        final String name = "companyName";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasCompanyName() {
        return hasSlotValues(getCompanyNameSlot());
    }


    public void setCompanyName(String newCompanyName) {
        setSlotValue(getCompanyNameSlot(), newCompanyName);
    }
}
