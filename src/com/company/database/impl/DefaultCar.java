package com.company.database.impl;

import edu.stanford.smi.protege.code.generator.wrapping.AbstractWrappedInstance;
import edu.stanford.smi.protege.model.*;
import com.company.database.Car;
import com.company.database.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: Car
 *
 * @version generated on Mon Apr 18 14:26:55 MSD 2016
 */
public class DefaultCar extends AbstractWrappedInstance
         implements Car {

    public DefaultCar(Instance instance) {
        super(instance);
    }


    public DefaultCar() {
    }

    // Slot marka

    public String getMarka() {
        return (String) getWrappedProtegeInstance().getOwnSlotValue(getMarkaSlot());
    }


    public Slot getMarkaSlot() {
        final String name = "marka";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasMarka() {
        return hasSlotValues(getMarkaSlot());
    }


    public void setMarka(String newMarka) {
        setSlotValue(getMarkaSlot(), newMarka);
    }

    // Slot model

    public String getModel() {
        return (String) getWrappedProtegeInstance().getOwnSlotValue(getModelSlot());
    }


    public Slot getModelSlot() {
        final String name = "model";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasModel() {
        return hasSlotValues(getModelSlot());
    }


    public void setModel(String newModel) {
        setSlotValue(getModelSlot(), newModel);
    }

    // Slot power

    public int getPower() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getPowerSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getPowerSlot() {
        final String name = "power";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasPower() {
        return hasSlotValues(getPowerSlot());
    }


    public void setPower(int newPower) {
        setSlotValue(getPowerSlot(), new java.lang.Integer(newPower));
    }
}
