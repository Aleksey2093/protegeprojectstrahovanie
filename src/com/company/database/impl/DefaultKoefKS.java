package com.company.database.impl;

import edu.stanford.smi.protege.code.generator.wrapping.AbstractWrappedInstance;
import edu.stanford.smi.protege.model.*;
import com.company.database.KoefKS;
import com.company.database.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: KoefKS
 *
 * @version generated on Mon Apr 18 14:26:55 MSD 2016
 */
public class DefaultKoefKS extends DefaultKoeefis
         implements KoefKS {

    public DefaultKoefKS(Instance instance) {
        super(instance);
    }


    public DefaultKoefKS() {
    }

    // Slot klassKS

    public int getKlassKS() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getKlassKSSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getKlassKSSlot() {
        final String name = "klassKS";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasKlassKS() {
        return hasSlotValues(getKlassKSSlot());
    }


    public void setKlassKS(int newKlassKS) {
        setSlotValue(getKlassKSSlot(), new java.lang.Integer(newKlassKS));
    }

    // Slot value

    public float getValue() {
        java.lang.Float value = (java.lang.Float) getWrappedProtegeInstance().getOwnSlotValue(getValueSlot());
        return value == null ? null :
            (java.lang.Float) value.floatValue();
    }


    public Slot getValueSlot() {
        final String name = "value";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasValue() {
        return hasSlotValues(getValueSlot());
    }


    public void setValue(float newValue) {
        setSlotValue(getValueSlot(), new java.lang.Float(newValue));
    }
}
