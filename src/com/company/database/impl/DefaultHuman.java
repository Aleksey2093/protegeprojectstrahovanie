package com.company.database.impl;

import edu.stanford.smi.protege.code.generator.wrapping.AbstractWrappedInstance;
import edu.stanford.smi.protege.model.*;
import java.util.*;

import com.company.database.Human;
import com.company.database.*;

/**
 * Generated by Protege (http://protege.stanford.edu).
 * Source Class: Human
 *
 * @version generated on Mon Apr 18 14:26:55 MSD 2016
 */
public class DefaultHuman extends AbstractWrappedInstance
         implements Human {

    public DefaultHuman(Instance instance) {
        super(instance);
    }


    public DefaultHuman() {
    }

    // Slot dTP

    public Collection<DateDTP> getDTP() {
        Collection protegeValues = getWrappedProtegeInstance().getOwnSlotValues(getDTPSlot());
        Collection<DateDTP> values = new ArrayList<DateDTP>();
        Cls cls = getKnowledgeBase().getCls("DateDTP");
        for (Object object : protegeValues) {
            if (object instanceof Instance && ((Instance)object).hasType(cls)) {
                values.add(new DefaultDateDTP((Instance)object));
            }
        }
        return values;
    }


    public Slot getDTPSlot() {
        final String name = "dTP";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasDTP() {
        return hasSlotValues(getDTPSlot());
    }


    public void addDTP(DateDTP newDTP) {
        addSlotValue(getDTPSlot(), newDTP);
    }


    public void removeDTP(DateDTP oldDTP) {
        removeSlotValue(getDTPSlot(), oldDTP);
    }


    public void setDTP(Collection<? extends DateDTP> newDTP) {
        setSlotValues(getDTPSlot(), newDTP);
    }

    // Slot humanName

    public String getHumanName() {
        return (String) getWrappedProtegeInstance().getOwnSlotValue(getHumanNameSlot());
    }


    public Slot getHumanNameSlot() {
        final String name = "humanName";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasHumanName() {
        return hasSlotValues(getHumanNameSlot());
    }


    public void setHumanName(String newHumanName) {
        setSlotValue(getHumanNameSlot(), newHumanName);
    }

    // Slot myCity

    public City getMyCity() {
        Object object = getWrappedProtegeInstance().getOwnSlotValue(getMyCitySlot());
        Cls cls = getKnowledgeBase().getCls("City");
        if (object instanceof Instance && ((Instance)object).hasType(cls)) {
            return new DefaultCity((Instance)object);
        }
        return null;
    }


    public Slot getMyCitySlot() {
        final String name = "myCity";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasMyCity() {
        return hasSlotValues(getMyCitySlot());
    }


    public void setMyCity(City newMyCity) {
        setSlotValue(getMyCitySlot(), newMyCity);
    }

    // Slot my_Car

    public Car getMy_Car() {
        Object object = getWrappedProtegeInstance().getOwnSlotValue(getMy_CarSlot());
        Cls cls = getKnowledgeBase().getCls("Car");
        if (object instanceof Instance && ((Instance)object).hasType(cls)) {
            return new DefaultCar((Instance)object);
        }
        return null;
    }


    public Slot getMy_CarSlot() {
        final String name = "my_Car";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasMy_Car() {
        return hasSlotValues(getMy_CarSlot());
    }


    public void setMy_Car(Car newMy_Car) {
        setSlotValue(getMy_CarSlot(), newMy_Car);
    }

    // Slot stajStartyear

    public int getStajStartyear() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getStajStartyearSlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getStajStartyearSlot() {
        final String name = "stajStartyear";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasStajStartyear() {
        return hasSlotValues(getStajStartyearSlot());
    }


    public void setStajStartyear(int newStajStartyear) {
        setSlotValue(getStajStartyearSlot(), new java.lang.Integer(newStajStartyear));
    }

    // Slot yearBithday

    public int getYearBithday() {
        java.lang.Integer value = (java.lang.Integer) getWrappedProtegeInstance().getOwnSlotValue(getYearBithdaySlot());
        return value == null ? null :
            (java.lang.Integer) value.intValue();
    }


    public Slot getYearBithdaySlot() {
        final String name = "yearBithday";
        return getKnowledgeBase().getSlot(name);
    }


    public boolean hasYearBithday() {
        return hasSlotValues(getYearBithdaySlot());
    }


    public void setYearBithday(int newYearBithday) {
        setSlotValue(getYearBithdaySlot(), new java.lang.Integer(newYearBithday));
    }
}
